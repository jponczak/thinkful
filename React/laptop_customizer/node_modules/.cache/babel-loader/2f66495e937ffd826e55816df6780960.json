{"ast":null,"code":"import _classCallCheck from \"/Users/jponczak/Training/Thinkful/React/laptop_customizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jponczak/Training/Thinkful/React/laptop_customizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/jponczak/Training/Thinkful/React/laptop_customizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/jponczak/Training/Thinkful/React/laptop_customizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/jponczak/Training/Thinkful/React/laptop_customizer/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './Header/Header';\nimport FeatureList from './FeatureList/FeatureList'; // Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\n\nimport slugify from 'slugify';\nimport './App.css'; // This object will allow us to\n// easily convert numbers into US dollar values\n// const USCurrencyFormat = new Intl.NumberFormat('en-US', {\n//   style: 'currency',\n//   currency: 'USD'\n// });\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    // state = {\n    //   selected: {\n    //     Processor: {\n    //       name: '17th Generation Intel Core HB (7 Core with donut spare)',\n    //       cost: 700\n    //     },\n    //     'Operating System': {\n    //       name: 'Ubuntu Linux 16.04',\n    //       cost: 200\n    //     },\n    //     'Video Card': {\n    //       name: 'Toyota Corolla 1.5v',\n    //       cost: 1150.98\n    //     },\n    //     Display: {\n    //       name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n    //       cost: 1500\n    //     }\n    //   }\n    // };\n    // updateFeature = (feature, newValue) => {\n    //   const selected = Object.assign({}, this.state.selected);\n    //   selected[feature] = newValue;\n    //   this.setState({\n    //     selected\n    //   });\n    // };\n    // render() {\n    //   const features = Object.keys(this.props.features).map((feature, idx) => {\n    //     const featureHash = feature + '-' + idx;\n    //     const options = this.props.features[feature].map(item => {\n    //       const itemHash = slugify(JSON.stringify(item));\n    //       return (\n    //         <div key={itemHash} className=\"feature__item\">\n    //           <input\n    //             type=\"radio\"\n    //             id={itemHash}\n    //             className=\"feature__option\"\n    //             name={slugify(feature)}\n    //             checked={item.name === this.state.selected[feature].name}\n    //             onChange={e => this.updateFeature(feature, item)}\n    //           />\n    //           <label htmlFor={itemHash} className=\"feature__label\">\n    //             {item.name} ({USCurrencyFormat.format(item.cost)})\n    //           </label>\n    //         </div>\n    //       );\n    //     });\n    //     return (\n    //       <fieldset className=\"feature\" key={featureHash}>\n    //         <legend className=\"feature__name\">\n    //           <h3>{feature}</h3>\n    //         </legend>\n    //         {options}\n    //       </fieldset>\n    //     );\n    //   });\n    //   const summary = Object.keys(this.state.selected).map((feature, idx) => {\n    //     const featureHash = feature + '-' + idx;\n    //     const selectedOption = this.state.selected[feature];\n    //     return (\n    //       <div className=\"summary__option\" key={featureHash}>\n    //         <div className=\"summary__option__label\">{feature} </div>\n    //         <div className=\"summary__option__value\">{selectedOption.name}</div>\n    //         <div className=\"summary__option__cost\">\n    //           {USCurrencyFormat.format(selectedOption.cost)}\n    //         </div>\n    //       </div>\n    //     );\n    //   });\n    // const total = Object.keys(this.state.selected).reduce(\n    //   (acc, curr) => acc + this.state.selected[curr].cost,\n    //   0\n    // );\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"main\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(FeatureList, {\n        features: this.props.features,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jponczak/Training/Thinkful/React/laptop_customizer/src/App.js"],"names":["React","Component","Header","FeatureList","slugify","App","props","features"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;AACA;;AACA,OAAOC,OAAP,MAAoB,SAApB;AAEA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;;IAEMC,G;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE;AACA;AACA;AACA;6BACO;AACP,0BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAI,KAAKC,KAAL,CAAWC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAFF,CADF;AAsBD;;;;EAxGeN,S;;AA2GlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from './Header/Header';\nimport FeatureList from './FeatureList/FeatureList';\n\n// Normalizes string as a slug - a string that is safe to use\n// in both URLs and html attributes\nimport slugify from 'slugify';\n\nimport './App.css';\n\n// This object will allow us to\n// easily convert numbers into US dollar values\n// const USCurrencyFormat = new Intl.NumberFormat('en-US', {\n//   style: 'currency',\n//   currency: 'USD'\n// });\n\nclass App extends Component {\n  // state = {\n  //   selected: {\n  //     Processor: {\n  //       name: '17th Generation Intel Core HB (7 Core with donut spare)',\n  //       cost: 700\n  //     },\n  //     'Operating System': {\n  //       name: 'Ubuntu Linux 16.04',\n  //       cost: 200\n  //     },\n  //     'Video Card': {\n  //       name: 'Toyota Corolla 1.5v',\n  //       cost: 1150.98\n  //     },\n  //     Display: {\n  //       name: '15.6\" UHD (3840 x 2160) 60Hz Bright Lights and Knobs',\n  //       cost: 1500\n  //     }\n  //   }\n  // };\n\n  // updateFeature = (feature, newValue) => {\n  //   const selected = Object.assign({}, this.state.selected);\n  //   selected[feature] = newValue;\n  //   this.setState({\n  //     selected\n  //   });\n  // };\n\n  // render() {\n  //   const features = Object.keys(this.props.features).map((feature, idx) => {\n  //     const featureHash = feature + '-' + idx;\n  //     const options = this.props.features[feature].map(item => {\n  //       const itemHash = slugify(JSON.stringify(item));\n  //       return (\n  //         <div key={itemHash} className=\"feature__item\">\n  //           <input\n  //             type=\"radio\"\n  //             id={itemHash}\n  //             className=\"feature__option\"\n  //             name={slugify(feature)}\n  //             checked={item.name === this.state.selected[feature].name}\n  //             onChange={e => this.updateFeature(feature, item)}\n  //           />\n  //           <label htmlFor={itemHash} className=\"feature__label\">\n  //             {item.name} ({USCurrencyFormat.format(item.cost)})\n  //           </label>\n  //         </div>\n  //       );\n  //     });\n\n  //     return (\n  //       <fieldset className=\"feature\" key={featureHash}>\n  //         <legend className=\"feature__name\">\n  //           <h3>{feature}</h3>\n  //         </legend>\n  //         {options}\n  //       </fieldset>\n  //     );\n  //   });\n\n  //   const summary = Object.keys(this.state.selected).map((feature, idx) => {\n  //     const featureHash = feature + '-' + idx;\n  //     const selectedOption = this.state.selected[feature];\n\n  //     return (\n  //       <div className=\"summary__option\" key={featureHash}>\n  //         <div className=\"summary__option__label\">{feature} </div>\n  //         <div className=\"summary__option__value\">{selectedOption.name}</div>\n  //         <div className=\"summary__option__cost\">\n  //           {USCurrencyFormat.format(selectedOption.cost)}\n  //         </div>\n  //       </div>\n  //     );\n  //   });\n\n    // const total = Object.keys(this.state.selected).reduce(\n    //   (acc, curr) => acc + this.state.selected[curr].cost,\n    //   0\n    // );\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <main>\n        <FeatureList features = {this.props.features} />\n          {/* <form className=\"main__form\">\n            <h2>Customize your laptop</h2>\n            {features}\n          </form> */}\n          {/* <section className=\"main__summary\">\n            <h2>Your cart</h2>\n            {summary}\n            <div className=\"summary__total\">\n              <div className=\"summary__total__label\">Total</div>\n              <div className=\"summary__total__value\">\n                {USCurrencyFormat.format(total)}\n              </div>\n            </div>\n          </section> */}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}